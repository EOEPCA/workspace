apiVersion: apiextensions.crossplane.io/v1
kind: Composition
metadata:
  name: workspace
spec:
  compositeTypeRef:
    apiVersion: epca.eo/v1beta1
    kind: XWorkspace
  mode: Pipeline
  pipeline:
  - step: namespace
    functionRef:
      name: function-patch-and-transform
    input:
      apiVersion: pt.fn.crossplane.io/v1beta1
      kind: Resources
      resources:
      - name: namespace
        base:
          apiVersion: kubernetes.crossplane.io/v1alpha2
          kind: Object
          metadata: {}
          spec:
            forProvider:
              manifest:
                apiVersion: v1
                kind: Namespace
                metadata:
                  labels:
                    workspace: "true"
            providerConfigRef:
              name: provider-kubernetes
        patches:
        - type: FromCompositeFieldPath
          fromFieldPath: "spec.claimRef.name"
          toFieldPath: "spec.forProvider.manifest.metadata.name"
      - name: resourcequota
        base:
          apiVersion: kubernetes.crossplane.io/v1alpha2
          kind: Object
          metadata: {}
          spec:
            forProvider:
              manifest:
                apiVersion: v1
                kind: ResourceQuota
                metadata:
                  name: default
                spec:
                  hard: {}
            providerConfigRef:
              name: provider-kubernetes
        patches:
        - type: FromCompositeFieldPath
          fromFieldPath: "spec.claimRef.name"
          toFieldPath: "spec.forProvider.manifest.metadata.namespace"
        - type: FromCompositeFieldPath
          fromFieldPath: "spec.subscription"
          toFieldPath: "spec.forProvider.manifest.spec.hard"
          transforms:
          - type: map
            map: 
              bronze:
                limits.cpu: 1500m
                limits.memory: 6Gi
                pods: "5"
                requests.cpu: "1"
                requests.memory: 4Gi
              silver:
                limits.cpu: "3"
                limits.memory: 12Gi
                pods: "10"
                requests.cpu: "2"
                requests.memory: 8Gi
              gold:
                limits.cpu: "6"
                limits.memory: 20Gi
                pods: "20"
                requests.cpu: "4"
                requests.memory: 16Gi
      - name: storage
        base:
          apiVersion: kubernetes.crossplane.io/v1alpha2
          kind: Object
          metadata: {}
          spec:
            forProvider:
              manifest:
                apiVersion: epca.eo/v1beta1
                kind: Storage
                metadata: 
                  name: default            
                spec:
                  location: EU
                  acl: private
                  writeConnectionSecretToRef:
                    name: bucket
            providerConfigRef:
              name: provider-kubernetes
        patches:
        - type: FromCompositeFieldPath
          fromFieldPath: "spec.claimRef.name"
          toFieldPath: "spec.forProvider.manifest.metadata.namespace"
      - name: deployment-workspace-ui
        base:
          apiVersion: kubernetes.crossplane.io/v1alpha2
          kind: Object
          metadata: {}
          spec:
            forProvider:
              manifest:
                apiVersion: apps/v1
                kind: Deployment
                metadata:
                  name: workspace-ui
                labels:
                  app.kubernetes.io/instance: workspace-ui
                  app.kubernetes.io/name: workspace-ui
                spec:
                  strategy:
                    rollingUpdate:
                      maxUnavailable: 0
                    type: RollingUpdate
                  replicas: 1
                  revisionHistoryLimit: 2
                  selector:
                    matchLabels:
                      app.kubernetes.io/instance: workspace-ui
                      app.kubernetes.io/name: workspace-ui
                  template:
                    metadata:
                      labels:
                        app.kubernetes.io/instance: workspace-ui
                        app.kubernetes.io/name: workspace-ui
                    spec:
                      containers:
                      - name: workspace-ui
                        image: ghcr.io/versioneer-tech/package-r:v1.2.5
                        ports:
                        - name: http
                          containerPort: 80
                          protocol: TCP
                        env:
                        - name: BUCKET_DEFAULT
                          value: "<replaced>"
                        - name: BRANDING_NAME
                          value: "Workspace UI"
                        - name: AWS_ACCESS_KEY_ID
                          valueFrom:
                            secretKeyRef:
                              name: bucket
                              key: access
                        - name: AWS_SECRET_ACCESS_KEY
                          valueFrom:
                            secretKeyRef:
                              name: bucket
                              key: secret
                        - name: AWS_REGION
                          value: eu-central-1
                        - name: AWS_ENDPOINT_URL
                          value: https://minio.develop.eoepca.org
                        - name: PASSWORD
                          value: "changeme"
                        resources:
                          limits:
                            cpu: 1
                            memory: 512Mi
                          requests:
                            cpu: 0.1
                            memory: 128Mi
                        imagePullPolicy: Always                  
            providerConfigRef:
              name: provider-kubernetes
        patches:
        - type: FromCompositeFieldPath
          fromFieldPath: "spec.claimRef.name"
          toFieldPath: "spec.forProvider.manifest.metadata.namespace"
        - type: FromCompositeFieldPath
          fromFieldPath: "spec.claimRef.name"
          toFieldPath: "spec.forProvider.manifest.spec.template.spec.containers[0].env[0].value"
          transforms:
          - type: string
            string:
              type: Format
              fmt: '%s-stage'
      - name: service-workspace-ui
        base:
          apiVersion: kubernetes.crossplane.io/v1alpha2
          kind: Object
          metadata: {}
          spec:
            forProvider:
              manifest:
                apiVersion: v1
                kind: Service
                metadata:
                  name: workspace-ui
                spec:
                  type: ClusterIP
                  selector:
                    app.kubernetes.io/instance: workspace-ui
                    app.kubernetes.io/name: workspace-ui
                  ports:
                    - name: http
                      protocol: TCP
                      port: 80
                      targetPort: http                
            providerConfigRef:
              name: provider-kubernetes
        patches:
        - type: FromCompositeFieldPath
          fromFieldPath: "spec.claimRef.name"
          toFieldPath: "spec.forProvider.manifest.metadata.namespace"
      - name: ingress-workspace-ui
        base:
          apiVersion: kubernetes.crossplane.io/v1alpha2
          kind: Object
          metadata: {}
          spec:
            forProvider:
              manifest:
                apiVersion: networking.k8s.io/v1
                kind: Ingress
                metadata:
                  name: workspace-ui
                  annotations:
                    cert-manager.io/cluster-issuer: letsencrypt-prod
                    kubernetes.io/ingress.class: nginx
                    nginx.ingress.kubernetes.io/enable-cors: "true"
                    nginx.ingress.kubernetes.io/proxy-read-timeout: "600"
                spec:
                  rules:
                  - host: <replaced>
                    http:
                      paths:
                      - backend:
                          service:
                            name: workspace-ui
                            port:
                              name: http
                        path: /
                        pathType: ImplementationSpecific
                  tls:
                  - hosts:
                    - <replaced>
                    secretName: workspace-ui-tls               
            providerConfigRef:
              name: provider-kubernetes
        patches:
        - type: FromCompositeFieldPath
          fromFieldPath: "spec.claimRef.name"
          toFieldPath: "spec.forProvider.manifest.metadata.namespace"
        - type: FromCompositeFieldPath
          fromFieldPath: "spec.claimRef.name"
          toFieldPath: "spec.forProvider.manifest.spec.rules[0].host"
          transforms:
          - type: string
            string:
              type: Format
              fmt: '%s.develop.eoepca.org'
        - type: FromCompositeFieldPath
          fromFieldPath: "spec.claimRef.name"
          toFieldPath: "spec.forProvider.manifest.spec.tls[0].hosts[0]"
          transforms:
          - type: string
            string:
              type: Format
              fmt: '%s.develop.eoepca.org'
      - name: source-workspace-ui
        base:
          apiVersion: kubernetes.crossplane.io/v1alpha2
          kind: Object
          metadata: {}
          spec:
            forProvider:
              manifest:
                apiVersion: package.r/alphav1
                kind: Source
                spec:
                  access:               
                    secretName: bucket
            providerConfigRef:
              name: provider-kubernetes
        patches:
        - type: FromCompositeFieldPath
          fromFieldPath: "spec.claimRef.name"
          toFieldPath: "spec.forProvider.manifest.metadata.name"
        - type: FromCompositeFieldPath
          fromFieldPath: "spec.claimRef.name"
          toFieldPath: "spec.forProvider.manifest.metadata.namespace"
      - name: source-global-workspace-ui
        base:
          apiVersion: kubernetes.crossplane.io/v1alpha2
          kind: Object
          metadata: {}
          spec:
            forProvider:
              manifest:
                apiVersion: package.r/alphav1
                kind: Source
                metadata:
                  namespace: workspace
            providerConfigRef:
              name: provider-kubernetes
        patches:
        - type: FromCompositeFieldPath
          fromFieldPath: "spec.claimRef.name"
          toFieldPath: "spec.forProvider.manifest.metadata.name"
      - name: rolebinding-workspace-ui
        base:
          apiVersion: kubernetes.crossplane.io/v1alpha2
          kind: Object
          metadata: {}
          spec:
            forProvider:
              manifest:
                apiVersion: rbac.authorization.k8s.io/v1
                kind: RoleBinding                
                metadata:
                  name: default-view
                subjects:
                - kind: ServiceAccount
                  name: default
                  namespace: <replaced>
                roleRef:
                  kind: ClusterRole
                  name: view
                  apiGroup: rbac.authorization.k8s.io
            providerConfigRef:
              name: provider-kubernetes
        patches:
        - type: FromCompositeFieldPath
          fromFieldPath: "spec.claimRef.name"
          toFieldPath: "spec.forProvider.manifest.metadata.namespace"
        - type: FromCompositeFieldPath
          fromFieldPath: "spec.claimRef.name"
          toFieldPath: "spec.forProvider.manifest.subjects[0].namespace"
      # extend for github/gitlab, vcluster, ...