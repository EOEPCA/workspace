apiVersion: apiextensions.crossplane.io/v1
kind: Composition
metadata:
  name: workspace
spec:
  compositeTypeRef:
    apiVersion: epca.eo/v1beta1
    kind: XWorkspace
  mode: Pipeline
  pipeline:
  - step: namespace
    functionRef:
      name: function-patch-and-transform
    input:
      apiVersion: pt.fn.crossplane.io/v1beta1
      kind: Resources
      resources:
      - name: namespace
        base:
          apiVersion: kubernetes.crossplane.io/v1alpha2
          kind: Object
          metadata: {}
          spec:
            forProvider:
              manifest:
                apiVersion: v1
                kind: Namespace
                metadata:
                  labels:
                    workspace: "true"
            providerConfigRef:
              name: provider-kubernetes
        patches:
        - type: FromCompositeFieldPath
          fromFieldPath: "metadata.name"
          toFieldPath: "spec.forProvider.manifest.metadata.name"
      - name: resourcequota
        base:
          apiVersion: kubernetes.crossplane.io/v1alpha2
          kind: Object
          metadata: {}
          spec:
            forProvider:
              manifest:
                apiVersion: v1
                kind: ResourceQuota
                metadata:
                  name: default
                spec:
                  hard: {}
            providerConfigRef:
              name: provider-kubernetes
        patches:
        #- type: FromCompositeFieldPath
        #  fromFieldPath: "metadata.name"
        #  toFieldPath: "spec.forProvider.manifest.metadata.name"
        - type: FromCompositeFieldPath
          fromFieldPath: "metadata.name"
          toFieldPath: "spec.forProvider.manifest.metadata.namespace"
        - type: FromCompositeFieldPath
          fromFieldPath: "spec.subscription"
          toFieldPath: "spec.forProvider.manifest.spec.hard"
          transforms:
          - type: map
            map: 
              bronze:
                limits.cpu: 1500m
                limits.memory: 6Gi
                pods: "5"
                requests.cpu: "1"
                requests.memory: 4Gi
              silver:
                limits.cpu: "3"
                limits.memory: 12Gi
                pods: "10"
                requests.cpu: "2"
                requests.memory: 8Gi
              gold:
                limits.cpu: "6"
                limits.memory: 20Gi
                pods: "20"
                requests.cpu: "4"
                requests.memory: 16Gi
      - name: storage
        base:
          apiVersion: kubernetes.crossplane.io/v1alpha2
          kind: Object
          metadata: {}
          spec:
            forProvider:
              manifest:
                apiVersion: epca.eo/v1beta1
                kind: Storage
                metadata: 
                  name: default            
                spec:
                  location: EU
                  acl: private
            providerConfigRef:
              name: provider-kubernetes
        patches:
        #- type: FromCompositeFieldPath
        #  fromFieldPath: "metadata.name"
        #  toFieldPath: "spec.forProvider.manifest.metadata.name"
        - type: FromCompositeFieldPath
          fromFieldPath: "metadata.name"
          toFieldPath: "spec.forProvider.manifest.metadata.namespace"
      - name: deployment-workspace-ui
        base:
          apiVersion: kubernetes.crossplane.io/v1alpha2
          kind: Object
          metadata: {}
          spec:
            forProvider:
              manifest:
                apiVersion: apps/v1
                kind: Deployment
                metadata:
                  name: workspace-ui
                labels:
                  app.kubernetes.io/instance: workspace-ui
                  app.kubernetes.io/name: workspace-ui
                spec:
                  strategy:
                    rollingUpdate:
                      maxUnavailable: 0
                    type: RollingUpdate
                  replicas: 1
                  revisionHistoryLimit: 2
                  selector:
                    matchLabels:
                      app.kubernetes.io/instance: workspace-ui
                      app.kubernetes.io/name: workspace-ui
                  template:
                    metadata:
                      labels:
                        app.kubernetes.io/instance: workspace-ui
                        app.kubernetes.io/name: workspace-ui
                    spec:
                      containers:
                      - name: workspace-ui
                        image: ghcr.io/versioneer-tech/package-r:v1.2.1
                        ports:
                        - name: http
                          containerPort: 80
                          protocol: TCP
                        env:
                        - name: BUCKET_DEFAULT
                          value: "<replaced>"
                        - name: BRANDING_NAME
                          value: "Workspace UI"
                        - name: AWS_ACCESS_KEY_ID
                          valueFrom:
                            secretKeyRef:
                              name: bucket-credentials
                              key: AWS_ACCESS_KEY_ID
                        - name: AWS_SECRET_ACCESS_KEY
                          valueFrom:
                            secretKeyRef:
                              name: bucket-credentials
                              key: AWS_SECRET_ACCESS_KEY
                        - name: AWS_REGION
                          value: eu-central-1
                        - name: AWS_ENDPOINT_URL
                          value: https://minio.develop.eoepca.org                        
                        resources:
                          limits:
                            cpu: 1
                            memory: 512Mi
                          requests:
                            cpu: 0.1
                            memory: 128Mi
                        imagePullPolicy: Always                  
            providerConfigRef:
              name: provider-kubernetes
        patches:
        #- type: FromCompositeFieldPath
        #  fromFieldPath: "metadata.name"
        #  toFieldPath: "spec.forProvider.manifest.metadata.name"
        - type: FromCompositeFieldPath
          fromFieldPath: "metadata.name"
          toFieldPath: "spec.forProvider.manifest.metadata.namespace"
        - type: FromCompositeFieldPath
          fromFieldPath: "metadata.name"
          toFieldPath: "spec.forProvider.manifest.spec.template.spec.containers[0].env[0].value"
          transforms:
          - type: string
            string:
              type: Format
              fmt: '%s-stage'
      - name: service-workspace-ui
        base:
          apiVersion: kubernetes.crossplane.io/v1alpha2
          kind: Object
          metadata: {}
          spec:
            forProvider:
              manifest:
                apiVersion: v1
                kind: Service
                metadata:
                  name: workspace-ui
                spec:
                  type: ClusterIP
                  selector:
                    app.kubernetes.io/instance: workspace-ui
                    app.kubernetes.io/name: workspace-ui
                  ports:
                    - name: http
                      protocol: TCP
                      port: 80
                      targetPort: http                
            providerConfigRef:
              name: provider-kubernetes
        patches:
        #- type: FromCompositeFieldPath
        #  fromFieldPath: "metadata.name"
        #  toFieldPath: "spec.forProvider.manifest.metadata.name"
        - type: FromCompositeFieldPath
          fromFieldPath: "metadata.name"
          toFieldPath: "spec.forProvider.manifest.metadata.namespace"
      # - name: github TODO
      # - name: vcluster TODO
      # - name: gitops TODO
      # - name: validation webhook TODO